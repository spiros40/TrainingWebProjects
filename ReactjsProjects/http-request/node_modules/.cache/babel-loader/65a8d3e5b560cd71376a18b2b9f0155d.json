{"ast":null,"code":"var _jsxFileName = \"/home/lubuntu/Desktop/Programming/TrainingWebProjects/ReactjsProjects/http-request/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [error, setError] = useState(null);\n  /*sending a get request with help of then\n  const fetchMovieHandler=()=>{\n  fetch('https://swapi.dev/api/films/').then(response=>{\n    return response.json();\n  }).then(data=>{\n    const transformedMovies=data.results.map((movieData)=>{\n      return{\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText:movieData.opening_crawl,\n        releaseDate:movieData.release_date\n      }\n    });\n    setMovies(transformedMovies);\n  });\n  }*/\n\n  async function fetchMovieHandler() {\n    setisLoading(true);\n    setError();\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n\n      if (!response.ok) {\n        throw new Error(\"Something gone wrong..\");\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setisLoading(false);\n  }\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Movies Found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Api is Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sthYdwhtOO7al2fKnJ32uLvEqHc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setisLoading","error","setError","fetchMovieHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content","length"],"sources":["/home/lubuntu/Desktop/Programming/TrainingWebProjects/ReactjsProjects/http-request/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies]=useState([]);\n  const [isLoading, setisLoading]=useState(false);\n  const [error, setError]=useState(null);\n  \n  /*sending a get request with help of then\n  const fetchMovieHandler=()=>{\n  fetch('https://swapi.dev/api/films/').then(response=>{\n    return response.json();\n  }).then(data=>{\n    const transformedMovies=data.results.map((movieData)=>{\n      return{\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText:movieData.opening_crawl,\n        releaseDate:movieData.release_date\n      }\n    });\n    setMovies(transformedMovies);\n  });\n}*/\n\nasync function fetchMovieHandler(){\n  setisLoading(true);\n  setError();\n  try{\n    const response=await fetch('https://swapi.dev/api/films/')\n    if(!response.ok){\n      throw new Error(\"Something gone wrong..\");\n    }\n    const data=await response.json();\n    \n    const transformedMovies=data.results.map((movieData)=>{\n      return{\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText:movieData.opening_crawl,\n        releaseDate:movieData.release_date\n      }\n    });\n    setMovies(transformedMovies);    \n  }catch(error){\n    setError(error.message);\n  }\n  setisLoading(false);\n}\n\nlet content=<p>No Movies Found.</p>;\n\nif(movies.length>0){\n  content=<MoviesList movies={movies}/>;\n}\n\nif(error){\n  content=<p>{error}</p>;\n}\n\nif(isLoading){\n  content=<p>Api is Loading...</p>;\n}\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* in line code\n        {isLoading && <p>Api is Loading...</p>}\n        {movies.length>0 && <MoviesList movies={movies}/>}\n        {!isLoading&&movies.length===0 && !error && <p>No Movies Found.</p>}\n        {!isLoading && error && <p>{error}</p>} */}\n        <section>{content}</section>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,eAAeS,iBAAf,GAAkC;IAChCH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ;;IACR,IAAG;MACD,MAAME,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAAD,CAA1B;;MACA,IAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;QACd,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAC,MAAMJ,QAAQ,CAACK,IAAT,EAAjB;MAEA,MAAMC,iBAAiB,GAACF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAa;QACpD,OAAM;UACJC,EAAE,EAAED,SAAS,CAACE,UADV;UAEJC,KAAK,EAAEH,SAAS,CAACG,KAFb;UAGJC,WAAW,EAACJ,SAAS,CAACK,aAHlB;UAIJC,WAAW,EAACN,SAAS,CAACO;QAJlB,CAAN;MAMD,CAPuB,CAAxB;MAQAtB,SAAS,CAACY,iBAAD,CAAT;IACD,CAhBD,CAgBC,OAAMT,KAAN,EAAY;MACXC,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACD;;IACDrB,YAAY,CAAC,KAAD,CAAZ;EACD;;EAED,IAAIsB,OAAO,gBAAC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAZ;;EAEA,IAAGzB,MAAM,CAAC0B,MAAP,GAAc,CAAjB,EAAmB;IACjBD,OAAO,gBAAC,QAAC,UAAD;MAAY,MAAM,EAAEzB;IAApB;MAAA;MAAA;MAAA;IAAA,QAAR;EACD;;EAED,IAAGI,KAAH,EAAS;IACPqB,OAAO,gBAAC;MAAA,UAAIrB;IAAJ;MAAA;MAAA;MAAA;IAAA,QAAR;EACD;;EAED,IAAGF,SAAH,EAAa;IACXuB,OAAO,gBAAC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAR;EACD;;EAEC,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAA,uBACE;QAAQ,OAAO,EAAEnB,iBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,uBAME;QAAA,UAAUmB;MAAV;QAAA;QAAA;QAAA;MAAA;IANF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA5EQ1B,G;;KAAAA,G;AA8ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}