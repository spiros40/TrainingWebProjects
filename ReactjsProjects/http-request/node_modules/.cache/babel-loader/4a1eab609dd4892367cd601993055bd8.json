{"ast":null,"code":"var _jsxFileName = \"/home/lubuntu/Desktop/Programming/TrainingWebProjects/ReactjsProjects/http-request/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  /*sending a get request with help of then\n  const fetchMovieHandler=()=>{\n  fetch('https://swapi.dev/api/films/').then(response=>{\n    return response.json();\n  }).then(data=>{\n    const transformedMovies=data.results.map((movieData)=>{\n      return{\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText:movieData.opening_crawl,\n        releaseDate:movieData.release_date\n      }\n    });\n    setMovies(transformedMovies);\n  });\n  }*/\n\n  async function fetchMovieHandler() {\n    setisLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedMovies);\n    setisLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Api is Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this) : movies < 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PlRVGZ4ra/De+/ic6yE9zb59P2k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setisLoading","fetchMovieHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date"],"sources":["/home/lubuntu/Desktop/Programming/TrainingWebProjects/ReactjsProjects/http-request/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies]=useState([]);\n  const [isLoading, setisLoading]=useState(false);\n  \n  /*sending a get request with help of then\n  const fetchMovieHandler=()=>{\n  fetch('https://swapi.dev/api/films/').then(response=>{\n    return response.json();\n  }).then(data=>{\n    const transformedMovies=data.results.map((movieData)=>{\n      return{\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText:movieData.opening_crawl,\n        releaseDate:movieData.release_date\n      }\n    });\n    setMovies(transformedMovies);\n  });\n}*/\n\nasync function fetchMovieHandler(){\n  setisLoading(true);\n  const response=await fetch('https://swapi.dev/api/films/')\n    const data=await response.json();\n\n    const transformedMovies=data.results.map((movieData)=>{\n      return{\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText:movieData.opening_crawl,\n        releaseDate:movieData.release_date\n      }\n    });\n    setMovies(transformedMovies);\n    setisLoading(false);\n}\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n    {isLoading? <p>Api is Loading...</p> :movies< 0 && <MoviesList movies={movies} />}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,eAAeO,iBAAf,GAAkC;IAChCD,YAAY,CAAC,IAAD,CAAZ;IACA,MAAME,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAAD,CAA1B;IACE,MAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IAEA,MAAMC,iBAAiB,GAACF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAa;MACpD,OAAM;QACJC,EAAE,EAAED,SAAS,CAACE,UADV;QAEJC,KAAK,EAAEH,SAAS,CAACG,KAFb;QAGJC,WAAW,EAACJ,SAAS,CAACK,aAHlB;QAIJC,WAAW,EAACN,SAAS,CAACO;MAJlB,CAAN;IAMD,CAPuB,CAAxB;IAQAlB,SAAS,CAACQ,iBAAD,CAAT;IACAN,YAAY,CAAC,KAAD,CAAZ;EACH;;EACC,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAA,uBACE;QAAQ,OAAO,EAAEC,iBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,UACDF,SAAS,gBAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAF,GAA4BF,MAAM,GAAE,CAAR,iBAAa,QAAC,UAAD;QAAY,MAAM,EAAEA;MAApB;QAAA;QAAA;QAAA;MAAA;IADjD;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA/CQD,G;;KAAAA,G;AAiDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}