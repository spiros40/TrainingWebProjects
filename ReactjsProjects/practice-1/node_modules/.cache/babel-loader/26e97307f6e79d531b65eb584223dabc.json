{"ast":null,"code":"var _jsxFileName = \"/home/lubuntu/Desktop/Programming/TrainingWebProjects/ReactjsProjects/practice-1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Input from './components/UserLogic/NewUser/Input';\nimport PopUpWin from './components/UI/PopUpWin/PopUpWin';\nimport UserList from './components/UserLogic/UserList/UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserArray = [{\n  id: 1,\n  username: \"One\",\n  age: \"11\"\n}, {\n  id: 2,\n  username: \"Two\",\n  age: \"22\"\n}];\nconst PopUpWinMessage = {\n  title: \"\",\n  content: \"\",\n  buttonName: \"\"\n};\n\nfunction App(props) {\n  _s();\n\n  const [PopUpWinStatus, setPopUpWinStatus] = useState(false);\n\n  const AddNewUser = event => {\n    // UserArray.push(data);\n    console.log(event);\n  };\n\n  const openPopUpWin = (winTitle, winContent, winButton) => {\n    PopUpWinMessage.title = winTitle;\n    PopUpWinMessage.content = winContent;\n    PopUpWinMessage.buttonName = winButton;\n    setPopUpWinStatus(true);\n  };\n\n  const closePopUpWin = () => {\n    setPopUpWinStatus(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      userAdd: AddNewUser,\n      onOpenPopUpWin: openPopUpWin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"frameDiv\",\n      children: UserArray.length > 0 ? UserArray.map(element => {\n        return /*#__PURE__*/_jsxDEV(UserList, {\n          userName: element.username,\n          Age: element.age\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this);\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), PopUpWinStatus ? /*#__PURE__*/_jsxDEV(PopUpWin, {\n      onClosePopUpWin: closePopUpWin,\n      title: PopUpWinMessage.title,\n      content: PopUpWinMessage.content,\n      buttonName: PopUpWinMessage.buttonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NgMYXAFOP7pnmsXHMrZ9gFnJsjc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Input","PopUpWin","UserList","UserArray","id","username","age","PopUpWinMessage","title","content","buttonName","App","props","PopUpWinStatus","setPopUpWinStatus","AddNewUser","event","console","log","openPopUpWin","winTitle","winContent","winButton","closePopUpWin","length","map","element"],"sources":["/home/lubuntu/Desktop/Programming/TrainingWebProjects/ReactjsProjects/practice-1/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport Input from './components/UserLogic/NewUser/Input';\nimport PopUpWin from './components/UI/PopUpWin/PopUpWin';\nimport UserList from './components/UserLogic/UserList/UserList';\n\nconst UserArray=[{id:1, username:\"One\", age:\"11\"},{id:2, username:\"Two\", age:\"22\"}];\n\nconst PopUpWinMessage={\n  title:\"\",\n  content:\"\",\n  buttonName:\"\"\n};\n\nfunction App(props) {\n  const [PopUpWinStatus, setPopUpWinStatus] = useState(false);    \n  \n  const AddNewUser=(event)=>{\n    // UserArray.push(data);\n    console.log(event);\n  }\n\n  const openPopUpWin=(winTitle,winContent,winButton)=>{\n    PopUpWinMessage.title=winTitle;\n    PopUpWinMessage.content=winContent;\n    PopUpWinMessage.buttonName=winButton;\n    setPopUpWinStatus(true);\n  }\n\n  const closePopUpWin=()=>{\n    setPopUpWinStatus(false);\n  }\n\n  return (\n    <div>\n      <Input userAdd={AddNewUser} onOpenPopUpWin={openPopUpWin}/>\n      <div className='frameDiv'>\n          {UserArray.length>0 ? UserArray.map((element)=>{\n            return (<UserList key={element.id} userName={element.username} Age={element.age}/>)\n          }) :\"\"}\n      </div>\n      {PopUpWinStatus? <PopUpWin  onClosePopUpWin={closePopUpWin} title={PopUpWinMessage.title} \n      content={PopUpWinMessage.content} buttonName={PopUpWinMessage.buttonName}/> :\"\"}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,QAAP,MAAqB,0CAArB;;AAEA,MAAMC,SAAS,GAAC,CAAC;EAACC,EAAE,EAAC,CAAJ;EAAOC,QAAQ,EAAC,KAAhB;EAAuBC,GAAG,EAAC;AAA3B,CAAD,EAAkC;EAACF,EAAE,EAAC,CAAJ;EAAOC,QAAQ,EAAC,KAAhB;EAAuBC,GAAG,EAAC;AAA3B,CAAlC,CAAhB;AAEA,MAAMC,eAAe,GAAC;EACpBC,KAAK,EAAC,EADc;EAEpBC,OAAO,EAAC,EAFY;EAGpBC,UAAU,EAAC;AAHS,CAAtB;;AAMA,SAASC,GAAT,CAAaC,KAAb,EAAoB;EAAA;;EAClB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,KAAD,CAApD;;EAEA,MAAMgB,UAAU,GAAEC,KAAD,IAAS;IACxB;IACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD,CAHD;;EAKA,MAAMG,YAAY,GAAC,CAACC,QAAD,EAAUC,UAAV,EAAqBC,SAArB,KAAiC;IAClDf,eAAe,CAACC,KAAhB,GAAsBY,QAAtB;IACAb,eAAe,CAACE,OAAhB,GAAwBY,UAAxB;IACAd,eAAe,CAACG,UAAhB,GAA2BY,SAA3B;IACAR,iBAAiB,CAAC,IAAD,CAAjB;EACD,CALD;;EAOA,MAAMS,aAAa,GAAC,MAAI;IACtBT,iBAAiB,CAAC,KAAD,CAAjB;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,OAAO,EAAEC,UAAhB;MAA4B,cAAc,EAAEI;IAA5C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,UAAf;MAAA,UACKhB,SAAS,CAACqB,MAAV,GAAiB,CAAjB,GAAqBrB,SAAS,CAACsB,GAAV,CAAeC,OAAD,IAAW;QAC7C,oBAAQ,QAAC,QAAD;UAA2B,QAAQ,EAAEA,OAAO,CAACrB,QAA7C;UAAuD,GAAG,EAAEqB,OAAO,CAACpB;QAApE,GAAeoB,OAAO,CAACtB,EAAvB;UAAA;UAAA;UAAA;QAAA,QAAR;MACD,CAFqB,CAArB,GAEG;IAHR;MAAA;MAAA;MAAA;IAAA,QAFF,EAOGS,cAAc,gBAAE,QAAC,QAAD;MAAW,eAAe,EAAEU,aAA5B;MAA2C,KAAK,EAAEhB,eAAe,CAACC,KAAlE;MACjB,OAAO,EAAED,eAAe,CAACE,OADR;MACiB,UAAU,EAAEF,eAAe,CAACG;IAD7C;MAAA;MAAA;MAAA;IAAA,QAAF,GAC8D,EAR/E;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA/BQC,G;;KAAAA,G;AAiCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}