{"ast":null,"code":"var _jsxFileName = \"/home/lubuntu/Desktop/Programming/TrainingWebProjects/ReactjsProjects/forms-inputs/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredName.trim() !== '';\n  const emailInputIsValid = !enteredEmailIsValid && enteredEmailTouched; //reads input on every change\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInoutBlurHandler = event => {\n    setEnteredNameTouched(true);\n  }; //reads email input on every change\n\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInoutBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    if (!enteredEmailIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInoutBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: nameInoutIsValid && \"Your input is invalid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInoutBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: emailInoutIsValid && \"Your email is invalid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"nLPwRBBCARNBsLUgNqKrhA7EIUU=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsValid","enteredEmailIsValid","emailInputIsValid","nameInputChangeHandler","event","target","value","nameInoutBlurHandler","emailInputChangeHandler","emailInoutBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses","nameInoutIsValid","emailInoutIsValid"],"sources":["/home/lubuntu/Desktop/Programming/TrainingWebProjects/ReactjsProjects/forms-inputs/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\nconst [enteredName, setEnteredName]=useState(\"\");\nconst [enteredNameTouched, setEnteredNameTouched]=useState(false);\nconst [enteredEmail, setEnteredEmail]=useState(\"\");\nconst [enteredEmailTouched, setEnteredEmailTouched]=useState(false);\n\nconst enteredNameIsValid=enteredName.trim()!=='';\nconst nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\nconst enteredEmailIsValid=enteredName.trim()!=='';\nconst emailInputIsValid = !enteredEmailIsValid && enteredEmailTouched;\n\n//reads input on every change\nconst nameInputChangeHandler=(event)=>{\n  setEnteredName(event.target.value);\n};\n\nconst nameInoutBlurHandler=(event)=>{\n  setEnteredNameTouched(true);\n}\n//reads email input on every change\nconst emailInputChangeHandler=(event)=>{\n  setEnteredEmail(event.target.value);\n};\n\nconst emailInoutBlurHandler=(event)=>{\n  setEnteredEmailTouched(true);\n}\n\nconst formSubmissionHandler=(event)=>{\n  event.preventDefault();\n  setEnteredNameTouched(true);\n  setEnteredEmailTouched(true);\n  if(!enteredNameIsValid){\n     return;\n  }\n  if(!enteredEmailIsValid){\n    return;\n }\n    \n  setEnteredName('');\n  setEnteredNameTouched(false);\n  setEnteredEmail('');\n  setEnteredEmailTouched(false);\n}\n\n  const nameInputClasses=nameInputIsValid ? \"form-control invalid\": \"form-control\"\n  const emailInputClasses=emailInputIsValid ? \"form-control invalid\": \"form-control\"\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input         \n          type='text' id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameInoutBlurHandler}\n        />\n        </div>\n        <p className=\"error-text\">{nameInoutIsValid && \"Your input is invalid\"}</p>\n\n        <div className={emailInputClasses}>\n          <label htmlFor='email'>Your Email</label>\n          <input         \n            type='email' id='email' \n            onChange={emailInputChangeHandler}\n            onBlur={emailInoutBlurHandler}\n          />\n        </div>\n        <p className=\"error-text\">{emailInoutIsValid && \"Your email is invalid\"}</p>\n      \n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA4CN,QAAQ,CAAC,KAAD,CAA1D;EACA,MAAM,CAACO,YAAD,EAAeC,eAAf,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACS,mBAAD,EAAsBC,sBAAtB,IAA8CV,QAAQ,CAAC,KAAD,CAA5D;EAEA,MAAMW,kBAAkB,GAACR,WAAW,CAACS,IAAZ,OAAqB,EAA9C;EACA,MAAMC,gBAAgB,GAAG,CAACF,kBAAD,IAAuBN,kBAAhD;EACA,MAAMS,mBAAmB,GAACX,WAAW,CAACS,IAAZ,OAAqB,EAA/C;EACA,MAAMG,iBAAiB,GAAG,CAACD,mBAAD,IAAwBL,mBAAlD,CAT+B,CAW/B;;EACA,MAAMO,sBAAsB,GAAEC,KAAD,IAAS;IACpCb,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,oBAAoB,GAAEH,KAAD,IAAS;IAClCX,qBAAqB,CAAC,IAAD,CAArB;EACD,CAFD,CAhB+B,CAmB/B;;;EACA,MAAMe,uBAAuB,GAAEJ,KAAD,IAAS;IACrCT,eAAe,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACD,CAFD;;EAIA,MAAMG,qBAAqB,GAAEL,KAAD,IAAS;IACnCP,sBAAsB,CAAC,IAAD,CAAtB;EACD,CAFD;;EAIA,MAAMa,qBAAqB,GAAEN,KAAD,IAAS;IACnCA,KAAK,CAACO,cAAN;IACAlB,qBAAqB,CAAC,IAAD,CAArB;IACAI,sBAAsB,CAAC,IAAD,CAAtB;;IACA,IAAG,CAACC,kBAAJ,EAAuB;MACpB;IACF;;IACD,IAAG,CAACG,mBAAJ,EAAwB;MACtB;IACF;;IAEAV,cAAc,CAAC,EAAD,CAAd;IACAE,qBAAqB,CAAC,KAAD,CAArB;IACAE,eAAe,CAAC,EAAD,CAAf;IACAE,sBAAsB,CAAC,KAAD,CAAtB;EACD,CAfD;;EAiBE,MAAMe,gBAAgB,GAACZ,gBAAgB,GAAG,sBAAH,GAA2B,cAAlE;EACA,MAAMa,iBAAiB,GAACX,iBAAiB,GAAG,sBAAH,GAA2B,cAApE;EACA,oBACE;IAAM,QAAQ,EAAEQ,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEE,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QACc,EAAE,EAAC,MADjB;QAEE,QAAQ,EAAET,sBAFZ;QAGE,MAAM,EAAEI;MAHV;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eASI;MAAG,SAAS,EAAC,YAAb;MAAA,UAA2BO,gBAAgB,IAAI;IAA/C;MAAA;MAAA;MAAA;IAAA,QATJ,eAWI;MAAK,SAAS,EAAED,iBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,OADP;QACe,EAAE,EAAC,OADlB;QAEE,QAAQ,EAAEL,uBAFZ;QAGE,MAAM,EAAEC;MAHV;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAXJ,eAmBI;MAAG,SAAS,EAAC,YAAb;MAAA,UAA2BM,iBAAiB,IAAI;IAAhD;MAAA;MAAA;MAAA;IAAA,QAnBJ,eAqBE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CA1ED;;GAAM3B,W;;KAAAA,W;AA4EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}